
plugins {
    id 'com.android.application'
    alias libs.plugins.kotlin.android
}        

android {
    if (System.getenv('SIGNING_KEY_ALIAS') != null) {
        signingConfigs {
            twinmeRelease {
                keyAlias System.getenv('SIGNING_KEY_ALIAS')
                keyPassword System.getenv('SIGNING_KEY_KEY_PASSWORD')
                storeFile file(System.getenv('SIGNING_KEY_STORE_FILE'))
                storePassword System.getenv('SIGNING_KEY_STORE_PASSWORD')
            }
        }
    }
    compileSdkVersion 35
    buildFeatures {
        buildConfig = true
    }
    defaultConfig {
        applicationId 'mobi.skred.app'
        minSdkVersion 21
        targetSdkVersion 35
        versionCode 338
        versionName "21.2"
        manifestPlaceholders.domainName = "twin.me"

        resourceConfigurations += ["en", "ar", "da", "de", "es", "fa", "fi", "fr", "hi", "in", "it", "iw", "ja", "ko", "nb", "nl", "pl", "pt", "ru", "sv", "tr", "uk", "vi", "zh-rCN", "zh-rTW"]
    }
    namespace 'org.twinlife.device.android.twinme'
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        // Production settings and build parameters.
        // The APK/AAB must be produced with this build type.
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            applicationIdSuffix ""

            buildConfigField "String", 'APPLICATION_ID_SUFFIX', '""'
            buildConfigField "String", 'SETTINGS_ACTIVITY', '"org.twinlife.twinme.ui.settingsActivity.SettingsActivity"'
            buildConfigField "String", "CHECK_VERSION_URL", "\"https://skred.mobi/download/skred.json\""
            buildConfigField "String", "FILE_PROVIDER", '"mobi.skred.app.fileprovider"'
            buildConfigField "String", "FLAVOR", '""'
            buildConfigField "boolean", "DISPLAY_PREMIUM_FEATURE", "false"
            buildConfigField "String", "INVITATION_PARAM_ID", '"skredcodeId"'

            manifestPlaceholders.domainName = "skred.mobi"
            manifestPlaceholders.twinmePackage = "org.twinlife.device.android.twinme"

            if (System.getenv('SIGNING_KEY_ALIAS') != null) {
                signingConfig signingConfigs.twinmeRelease
            }
        }

        // Production settings, dev build parameters.
        // Use this build type to test the app on the production environment when making a release.
        staging {
            initWith buildTypes.release
            shrinkResources false
            minifyEnabled false
            debuggable true

            signingConfig signingConfigs.debug

            applicationIdSuffix ".staging"
            buildConfigField "String", 'APPLICATION_ID_SUFFIX', '".staging"'
        }

        // Dev settings and build parameters.
        // Use to run the app during the development cycle.
        debug {
            // For Skred, if you use the .debug suffix, billing will not work.
            // applicationIdSuffix ".debug"
            // buildConfigField "String", 'APPLICATION_ID_SUFFIX', '".debug"'
            debuggable true

            buildConfigField "String", 'SETTINGS_ACTIVITY', '"org.twinlife.twinme.ui.settingsActivity.DebugSettingsActivity"'
            buildConfigField "String", "CHECK_VERSION_URL", "\"https://skred.mobi/download/skred.json\""
            buildConfigField "boolean", "DISPLAY_PREMIUM_FEATURE", "false"
            buildConfigField "String", "FILE_PROVIDER", '"mobi.skred.app.fileprovider"'
            buildConfigField "String", "FLAVOR", '"Development"'
            manifestPlaceholders.domainName = "skred.mobi"
            buildConfigField "String", "INVITATION_PARAM_ID", '"skredcodeId"'

            manifestPlaceholders.domainName = "skred.mobi"
            manifestPlaceholders.twinmePackage = "org.twinlife.device.android.twinme.debug"
        }
    }

    flavorDimensions = ["product", "tier"]

    productFlavors {
        skred {
            dimension "product"
        }

        free {
            dimension "tier"
        }
    }

    // Only define necessary variants
    variantFilter { variant ->
        def names = variant.flavors*.name

        if (names.contains("skred")) {
            if(names.contains("+") ) {
                // skred doesn't have a "plus" variant.
                // we allow the debug build type in the app module for applicationIdSuffix and such.
                setIgnore(true)
            }
        }
    }

    bundle {
        language {
            enableSplit = false
        }
    }
}
dependencies {

    implementation project(':twinlife-framework')
    implementation project(':webrtc-framework')
    implementation project(':twinme-framework')
    implementation project(':twinme-android-common')
    implementation project(':zxing')
    implementation project(':image-cropper')

    implementation libs.androidx.appcompat
    implementation libs.androidx.recyclerview
    implementation libs.material
    implementation libs.androidx.constraintlayout
    implementation libs.androidx.media
    implementation libs.androidx.core.splashscreen
    implementation libs.androidx.browser
    implementation libs.lottie
    implementation libs.glide
    implementation libs.glide.recyclerview

    implementation libs.play.services.location
    implementation libs.play.services.maps

    implementation libs.installreferrer
    implementation libs.billing

    // Support for Chooser Target (Replaced by direct share targets in Android 10)
    runtimeOnly libs.androidx.sharetarget

    // debugImplementation because LeakCanary should only run in debug builds.
    debugImplementation libs.leakcanary.android
}
